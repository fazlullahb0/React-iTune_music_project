{"ast":null,"code":"var _jsxFileName = \"/home/faiz/vscode/iTunes_music/src/Components/DIsplayCard/DisplayCard.js\";\nimport React from 'react';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport { Card, CardContent, CardMedia, IconButton, Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core';\nimport { green } from '@material-ui/core/colors';\nconst useStyles = makeStyles({\n  cardRoot: {\n    display: 'flex'\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: \"auto\"\n  },\n  content: {\n    flex: '1 0 auto'\n  },\n  cover: {\n    width: 101,\n    height: 101,\n    margin: \"auto\"\n  },\n  controls: {\n    display: 'flex',\n    alignItems: 'center',\n    margin: \"auto\"\n  },\n  playIcon: {\n    color: \"green\",\n    height: 38,\n    width: 38\n  }\n});\n\nconst DisplayCard = ({\n  selectedItem,\n  play,\n  handlePlayButton,\n  handlePauseButton\n}) => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.cardRoot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h5\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, selectedItem.trackName), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, selectedItem.artistName || \"no artist\")), /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.cover,\n    image: `${selectedItem.artworkUrl100}`,\n    title: `${selectedItem.trackname || \"no name\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.controls,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, play ? /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"play/pause\",\n    onClick: () => handlePauseButton(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(PauseIcon, {\n    className: classes.playIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  })) : /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"play/pause\",\n    onClick: () => handlePlayButton(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(PlayArrowIcon, {\n    className: classes.playIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }\n  })))));\n};\n\nexport default DisplayCard;","map":{"version":3,"sources":["/home/faiz/vscode/iTunes_music/src/Components/DIsplayCard/DisplayCard.js"],"names":["React","PlayArrowIcon","PauseIcon","Card","CardContent","CardMedia","IconButton","Typography","makeStyles","green","useStyles","cardRoot","display","details","flexDirection","margin","content","flex","cover","width","height","controls","alignItems","playIcon","color","DisplayCard","selectedItem","play","handlePlayButton","handlePauseButton","classes","trackName","artistName","artworkUrl100","trackname"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause'\nimport {\n    Card,\n    CardContent,\n    CardMedia,\n    IconButton,\n    Typography\n} from \"@material-ui/core\"\nimport { makeStyles } from '@material-ui/core'\nimport { green } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles({\n    cardRoot: {\n        display: 'flex',\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        margin: \"auto\"\n    },\n    content: {\n        flex: '1 0 auto',\n    },\n    cover: {\n        width: 101,\n        height: 101,\n        margin: \"auto\"\n    },\n    controls: {\n        display: 'flex',\n        alignItems: 'center',\n        margin: \"auto\"\n    },\n    playIcon: {\n        color:\"green\",\n        height: 38,\n        width: 38   \n    }\n})\n\nconst DisplayCard = ({ selectedItem, play, handlePlayButton, handlePauseButton }) => {\n    const classes = useStyles()\n\n    return(\n        <Card className={classes.cardRoot}>\n            <div className={classes.details}>\n                <CardContent className={classes.content}>\n                    <Typography component=\"h5\" variant=\"h5\">\n                        {selectedItem.trackName}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                        {selectedItem.artistName || \"no artist\"}\n                    </Typography>\n                </CardContent>\n\n                <CardMedia\n                    className={classes.cover}\n                    image={`${selectedItem.artworkUrl100}`}\n                    title={`${selectedItem.trackname || \"no name\"}`}\n                />\n\n                <div className={classes.controls}>\n                    {play \n                        ? (\n                            <IconButton aria-label=\"play/pause\" onClick={() => handlePauseButton()}>\n                                <PauseIcon className={classes.playIcon} />\n                            </IconButton>\n                        )\n                        : (\n                            <IconButton aria-label=\"play/pause\" onClick={() => handlePlayButton()}>\n                                <PlayArrowIcon className={classes.playIcon} />\n                            </IconButton>\n                        )\n                   }\n                </div>\n            </div>\n        </Card>\n    )\n}\n\nexport default DisplayCard"]},"metadata":{},"sourceType":"module"}