{"ast":null,"code":"import { takeEvery, call, cancel, put } from \"redux-saga/effects\";\nimport * as itunesSearchActions from \"./actions\";\nimport itunesSearchApi from './itunesSearchApi';\n\nfunction* searchItunesSaga(event) {\n  const {\n    searchTerm\n  } = event;\n\n  if (!searchTerm.length) {\n    yield cancel();\n  }\n\n  const itunesSearch = yield call(itunesSearchApi, searchTerm);\n  const {\n    results,\n    error\n  } = itunesSearch;\n\n  if (error) {\n    yield cancel();\n  }\n\n  yield put({\n    type: itunesSearchActions.SET_ITUNES_SEARCH_RESULTS,\n    results: results.filter(elem => elem.wrapperType === \"track\")\n  });\n}\n\nfunction* itunesSearchWatcher() {\n  yield takeEvery(itunesSearchActions.SEARCH_ITUNES, searchItunesSaga);\n}\n\nexport default itunesSearchWatcher;","map":{"version":3,"sources":["/home/faiz/vscode/iTunes_music/src/redux-core/itunesSearch/sagas.js"],"names":["takeEvery","call","cancel","put","itunesSearchActions","itunesSearchApi","searchItunesSaga","event","searchTerm","length","itunesSearch","results","error","type","SET_ITUNES_SEARCH_RESULTS","filter","elem","wrapperType","itunesSearchWatcher","SEARCH_ITUNES"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,MAA1B,EAAkCC,GAAlC,QAA6C,oBAA7C;AACA,OAAO,KAAKC,mBAAZ,MAAqC,WAArC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,UAAUC,gBAAV,CAA2BC,KAA3B,EAAkC;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAiBD,KAAvB;;AAEA,MAAG,CAACC,UAAU,CAACC,MAAf,EAAuB;AACnB,UAAMP,MAAM,EAAZ;AACH;;AAED,QAAMQ,YAAY,GAAG,MAAMT,IAAI,CAACI,eAAD,EAAkBG,UAAlB,CAA/B;AAEA,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAqBF,YAA3B;;AAEA,MAAGE,KAAH,EAAU;AACN,UAAMV,MAAM,EAAZ;AACH;;AAEF,QAAMC,GAAG,CAAC;AACNU,IAAAA,IAAI,EAAET,mBAAmB,CAACU,yBADpB;AAENH,IAAAA,OAAO,EAAEA,OAAO,CAACI,MAAR,CAAeC,IAAI,IAAIA,IAAI,CAACC,WAAL,KAAqB,OAA5C;AAFH,GAAD,CAAT;AAIF;;AAED,UAAUC,mBAAV,GAAgC;AAC5B,QAAMlB,SAAS,CAACI,mBAAmB,CAACe,aAArB,EAAoCb,gBAApC,CAAf;AACH;;AAED,eAAeY,mBAAf","sourcesContent":["import { takeEvery, call, cancel, put } from \"redux-saga/effects\"\nimport * as itunesSearchActions from \"./actions\"\nimport itunesSearchApi from './itunesSearchApi'\n\nfunction* searchItunesSaga(event) {\n    const { searchTerm } = event\n    \n    if(!searchTerm.length) {\n        yield cancel()\n    }\n\n    const itunesSearch = yield call(itunesSearchApi, searchTerm)\n\n    const { results, error } = itunesSearch\n\n    if(error) {\n        yield cancel()\n    }\n\n   yield put({\n       type: itunesSearchActions.SET_ITUNES_SEARCH_RESULTS,\n       results: results.filter(elem => elem.wrapperType === \"track\")\n   })\n}\n\nfunction* itunesSearchWatcher() {\n    yield takeEvery(itunesSearchActions.SEARCH_ITUNES, searchItunesSaga)\n}\n\nexport default itunesSearchWatcher"]},"metadata":{},"sourceType":"module"}